ci_method=.ci_method,
iterations=100)
.ci_method<-"hdi"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=100)
.ci_method<-"hdis"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=100)
.ci_method<-"bci"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=100)
.ci_method<-"bcai"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=100)
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=100)
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=10000)
.ci_method<-"bci"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=10000)
.ci_method<-"bcai"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=10000)
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=10000)
installme("gamlj")
parameters::parameters(model,
standardize="refit",
bootstrap=F,
ci_method=.ci_method,
iterations=10000)
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
parameters::parameters(model,
standardize="refit",
bootstrap=F,
ci_method=.ci_method,
iterations=100)
.ci_method<-"bci"
parameters::parameters(model,
standardize="refit",
bootstrap=F,
ci_method=.ci_method,
iterations=100)
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=100)
.ci_method<-"bcai"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=100)
.ci_method<-"bcai"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=100)
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=1000)
parameters::parameters(.model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=1000)
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
iterations=1000)
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
ci=.95,
iterations=1000)
class(model)
installme("gamlj")
.ci_method<-"bcai"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
ci=.95,
iterations=1000)
.ci_method<-"bcai"
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
ci=.95,
iterations=1000)
.ci_method
version(paramaters)
Version(paramaters)
package_version(parameters)
package_version("parameters")
package_version("parameters")
packageVersion("parameters")
installme("gamlj")
installme("gamlj")
version()
Version()
R.version()
R_version()
R.version
installme("gamlj")
installme("gamlj")
R.version
a<-list(se="SE",t=c("t.ratio","z.test"),p="p.value")
b<-c("SE","t.ratio","p.value","ciao")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
source("~/Skinner/Forge/jamovi/gamlj/R/procedures.R", echo=TRUE)
installme("gamlj")
R.version
installme("gamlj")
installme("gamlj")
installme("gamlj")
.model<-parameters::boot_model(model)
parameters::bootstrap_model(model)
.model<-parameters::bootstrap_model(model)
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="quantile")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="quantile")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="bci")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="bcai")
.model<-parameters::bootstrap_model(model,iterations = 1000)
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="bcai")
.model<-parameters::bootstrap_model(model,iterations = 10000)
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="bcai")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="bcai")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="quantile")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",cimethod="quantile")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="quantile")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="quantile")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
.model<-parameters::bootstrap_model(model,iterations = 100)
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
.model<-parameters::bootstrap_model(model,iterations = 100)
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
model_parameters(q)
parameters::model_parameters(q)
parameters::model_parameters(q,,ci_method="bcai")
q
q
q<-emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate")
q
parameters::model_parameters(q,ci_method="bcai")
parameters::model_parameters(q,ci_method="bcai")
q<-emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate")
q
parameters::model_parameters(q,ci_method="bcai")
q<-emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method)
q<-emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
q
parameters::model_parameters(q,ci_method="bcai")
q
str(q)
parameters::model_parameters(q,ci_method="bcai")
.model<-parameters::bootstrap_model(model,iterations = 100)
q<-emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
parameters::model_parameters(q,ci_method="bcai")
q
parameters::model_parameters(q,ci_method="quantile")
parameters::model_parameters(q,ci_method="bcai")
as.data.frame(parameters::model_parameters(q,ci_method="quantile"))
installme("gamlj")
installme("gamlj")
installme("gamlj")
data("wicksell")
data<-wicksell
data$group<-factor(data$group)
contrasts(data$group)<-contr.sum(2)/2
data$time<-factor(data$time)
contrasts(data$time)<-contr.sum(4)
head(data)
model<-lm(dv~time*group,data=data)
summary(model)
R.version
.model<-parameters::bootstrap_model(model)
.ci_method<-"bcai"
packageVersion("parameters")
parameters::parameters(model,
standardize="refit",
bootstrap=T,
ci_method=.ci_method,
ci=.95,
iterations=1000)
.anova<-car::Anova(model,type="III")
atable<-as.data.frame(.anova[c(-1,-dim(.anova)[1]),])
names(atable)<-c("SS","df","test","p")
df<-atable$df
dfres<-model$df.residual
sumr<-summary(model)
N<-dfres+sumr$fstatistic[[2]]+1
ssres<-sigma(model)^2*dfres
ssmod<-sumr$fstatistic[[1]]*sumr$fstatistic[[2]]*ssres/dfres
SS<-df*atable$test*ssres/dfres
N<-dfres+sumr$fstatistic[[2]]+1
ssres<-sigma(model)^2*dfres
data<-read.csv("extdata/exercise.csv")
names(data)
model<-lm(yendu~xage*zexer,data=data)
.model<-parameters::bootstrap_model(model,iterations = 100)
q<-emmeans::emtrends(.model,specs="xage",var="zexer",at=list(xage=c(30,40,50)),estName="estimate",ci_method="bcai")
q
as.data.frame(parameters::model_parameters(q,ci_method="quantile"))
parameters::model_parameters(q,ci_method="bcai")
a<-summary(graphics::pairs(rg))
opts_list<-list(object=model,vcov.=afun,specs=pairwise~fac*bac)
(rg<-do.call(emmeans::emmeans,opts_list))
data<-read.csv("extdata/twobytwo.csv")
head(data)
data$fac<-factor(data$fac)
data$bac<-factor(data$bac)
model<-lm(y~fac*bac,data = data)
afun<-function(x,...) sandwich::vcovHC(x,type="HC3",...)
is.something(afun)
opts_list<-list(object=model,vcov.=afun,specs=~fac*bac)
(rg<-do.call(emmeans::emmeans,opts_list))
summary(graphics::pairs(rg))
opts_list<-list(object=model,specs=~fac*bac)
(rg<-do.call(emmeans::emmeans,opts_list))
a<-summary(graphics::pairs(rg))
opts_list<-list(object=model,vcov.=afun,specs=pairwise~fac*bac)
(rg<-do.call(emmeans::emmeans,opts_list))
summary(graphics::pairs(rg))
opts_list<-list(object=model,vcov.=afun,specs=pairwise~fac*bac)
(rg<-do.call(emmeans::emmeans,opts_list))
summary(graphics::pairs(rg))
.model<-parameters::bootstrap_model(model)
opts_list$object<-.model
(rg<-do.call(emmeans::emmeans,opts_list))
a<-summary(graphics::pairs(rg))
a
(rg<-do.call(emmeans::emmeans,opts_list))
parameters::model_parameters(rg)
(rg<-do.call(emmeans::emmeans,opts_list))
parameters::parameters(rg)
parameters::parameters(rg$contrasts)
parameters::parameters(rg$contrasts,ci_method="quantile")
parameters::parameters(rg$contrasts,ci_method="quantile")
parameters::parameters(rg$contrasts,ci_method="bcai")
opts_list<-list(object=model,vcov.=afun,specs=pairwise~fac*bac)
(rg<-do.call(emmeans::emmeans,opts_list))
parameters::parameters(rg$contrasts,ci_method="bcai")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
a<-list(c("a","b"),c("a"),c("a","b","c"))
a<-list(c("a","b"),c("a"),c("a","b","c"))
b<-c("a","b")
b %in% a
jmvcore::composeTerms(a)
jmvcore::composeTerms(b) %in% jmvcore::composeTerms(a)
jmvcore::composeTerms(b)
b
b<-list(c("a","b"))
b
b<-c("a","b")
b
b %in% a
jmvcore::composeTerm(b) %in% jmvcore::composeTerms(a)
jmvcore::composeTerm(b)
jmvcore::composeTerm(b) %in% jmvcore::composeTerms(a)
jmvcore::composeTerm(b) %in% jmvcore::composeTerm(a)
jmvcore::composeTerm(a)
jmvcore::composeTerm(b) %in% jmvcore::composeTerms(a)
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
a<-list(c("a","b"),c("a"),c("b","a","c"))
sort(a)
a<-list(c("a","b"),c("a"),c("b","a","c"))
sort(a)
sort(b)
b<-c("b","a")
sort(b)
lapply(a, sort)
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
a[1:length(a)]
a<-c("a","b","c")
a[1:length(a)]
a<-c("a","b","c")
a[1:length(a)]
r<-rev(a)
r[1:length(r)]
paste(r[1:length(r)],collapse = "_")
a<-c("a","b","c")
r<-rev(a)
i<-1
while(i<length(r)) {
paste(r[length(r):i],collapse = "_")
i<-i+1
}
a<-c("a","b","c")
r<-rev(a)
i<-1
while(i<length(r)) {
print(paste(r[length(r):i],collapse = "_"))
i<-i+1
}
a<-c("a","b","c")
r<-rev(a)
i<-1
while(i<length(a)) {
print(paste(a[length(a):i],collapse = "_"))
i<-i+1
}
a<-c("a","b","c")
i<-1
while(i<length(a)) {
print(paste(a[length(a):i],collapse = "_"))
i<-i+1
}
a<-c("a","b","c","")
i<-1
while(i<length(a)) {
print(paste(a[length(a):i],collapse = "_"))
i<-i+1
}
a<a[length(a)]
a<-a[length(a)]
a
a<-c("a","b","c","")
a<-a[-length(a)]
a
i<-1
while(i<length(a)) {
print(paste(a[length(a):i],collapse = "_"))
i<-i+1
}
test<-which(a %in% "b")
test
a[-test]
while(i<length(a)) {
print(paste(a[length(a):i],collapse = "_"))
i<-i+1
}
a<-a[-test]
a
i<-1
while(i<length(a)) {
print(paste(a[length(a):i],collapse = "_"))
i<-i+1
}
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
a<-c("a","b","c","")
a<-a[-length(a)]
i<-1
while(i<length(a)) {
print(paste(a[length(a):i],collapse = "_"))
i<-i+1
}
a<-c("a","b","c","")
a<-a[-length(a)]
i<-1
a<-a[-length(a)]
a<-c("a","b","c","")
a<-a[-length(a)]
i<-1
while(i<=length(a)) {
print(paste(a[length(a):i],collapse = "_"))
i<-i+1
}
test<-which(a %in% "b")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
opts_list<-list(object=model,vcov.=afun,specs=~fac)
opts_list
opts_list<-list(object=model,vcov.=afun,specs=~fac)
(rg<-do.call(emmeans::emmeans,opts_list))
opts_list<-list(object=model,vcov.=afun,specs=~fac)
opts_list$object<-.model
(rg<-do.call(emmeans::emmeans,opts_list))
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
installme("gamlj")
jmvcore::fromB64(IMPROBABLE_SEQ)
IMPROBABLE_SEQ<-"Xd2ludGVyaXNjb21pbmc;"
jmvcore::fromB64(IMPROBABLE_SEQ)
IMPROBABLE_SEQ<-"Xd2ludGVyaXNjb21pbmc;"
jmvcore::fromB64(IMPROBABLE_SEQ)
jmvtools::version()
jmvtools::version()
jmvtools::version()
jmvtools::check()
install.packages("devtools")
installme("gamlj")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
install.packages("geepack")
install.packages("ordinal")
library(gamlj)
installme("gamlj")
#devtools::install_github("gamlj/gamlj")
source("local/functions.R")
installme("gamlj",home = home)
home<-"C:\\Program Files/jamovi 2.2.5.0/"
home
installme("gamlj",home = home)
installme("gamlj",home = home)
installme("gamlj",home = home)
home<-"C:\\Program Files/jamovi 2.2.5.0/"
jmvtools::version()
jmvtools::check(home=home)
installme("gamlj",home = home)
