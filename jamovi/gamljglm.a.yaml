name: gamljglm
title: Generalized Linear Model
menuGroup: Linear Models
version: 3.0.0
jas: '1.2'
export: false
weightsSupport: full
description:
        main: Generalized Linear Model
        R:
                dontrun: false
                usage: |
                        data<-emmeans::neuralgia
                         gamlj::gamljGzlm(
                                   formula = Pain ~ Duration,
                                   data = data,
                                    model_type = "logistic")
options:
-       name: data
        type: Data
        description:
                R: the data as a data frame
-       name: .caller
        type: String
        default: glm
        hidden: true
-       name: .interface
        type: String
        default: jamovi
        hidden: true
-       name: dep
        title: Dependent Variable
        type: Variable
        default: ~
        permitted:
        - factor
        - numeric
        description:
                R: |
                        a string naming the dependent variable from `data`; the variable must be numeric. Not needed if `formula` is used.
-       name: dep2
        title: Failures
        type: Variable
        default: ~
        permitted:
        - factor
        - numeric
        description:
                R: |
                        not present in R
-       name: factors
        title: Factors
        type: Variables
        suggested:
        - nominal
        permitted:
        - factor
        default: ~
        description:
                R: a vector of strings naming the fixed factors from `data`. Not needed
                        if `formula` is used.
-       name: covs
        title: Covariates
        type: Variables
        suggested:
        - continuous
        - ordinal
        permitted:
        - numeric
        default: ~
        description:
                R: a vector of strings naming the covariates from `data`. Not needed
                        if `formula` is used.
-       name: model_terms
        title: Model Terms
        type: Terms
        default: ~
        description:
                R: |
                        a list of character vectors describing fixed effects terms. Not needed if `formula` is used.
-       name: nested_terms
        title: Nested Model
        type: Terms
        default: ~
        description:
                R: |
                        a list of character vectors describing effects terms for nestet. It can be passed as right-hand formula.
-       name: comparison
        title: Activate
        type: Bool
        default: false
        description:
                R: |
                        Activates models comparison
-       name: fixed_intercept
        title: Intercept
        type: Bool
        default: true
        description:
                R: |
                        `TRUE` (default) or `FALSE`, estimates fixed intercept. Not needed if `formula` is used.
                ui: |
                        Estimates fixed intercept if flagged
-       name: nested_intercept
        title: Nested intercept
        type: Bool
        default: true
        description:
                R: |
                        `TRUE` (default) or `FALSE`, estimates fixed intercept. Not needed if `formula` is used.
-       name: ci_width
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
                R: |
                        a number between 50 and 99.9 (default: 95) specifying the confidence interval width for the plots.
-       name: boot_r
        title: Bootstrap rep.
        type: Number
        min: 1
        default: 1000
        description:
                R: |
                        The number bootstrap repetitions.
-       name: donotrun
        title: Do not run
        type: Bool
        default: false
        description:
                R: |
                        not present in R
                ui: |
                        If flagged, the results are not updated each time an option is changed.  This allows settings complex model options without waiting for the results to update every time. Unflag it when ready to go.
-       name: mute
        title: Remove notes
        type: Bool
        default: false
        description:
                R: |
                        Not present in R
                ui: |
                        Removes all notes and warnings from the Tables. Useful to produce pubblication quality tables.
-       name: posthoc
        title: Post Hoc Tests
        type: Terms
        default: ~
        description:
                R: a rhs formula with the terms specifying the table to apply the
                        comparisons (of the form `'~x+x:z'`). The formula is not expanded,
                        so '`x*z`' becomes '`x+z' and not '`x+z+x:z`'. It can be passed
                        also as a list of the form '`list("x","z",c("x","z")`'
-       name: posthoc_ci
        title: Confidence Intervals
        type: Bool
        default: false
        description:
                R: |
                        `TRUE`  or `FALSE` (default), coefficients CI in tables
-       name: adjust
        title: Correction
        type: NMXList
        options:
        -       name: none
                title: No correction (LSD)
        -       name: bonf
                title: Bonferroni
        -       name: tukey
                title: Tukey
        -       name: holm
                title: Holm
        -       name: scheffe
                title: Scheffe
        -       name: sidak
                title: Sidak
        default:
        - bonf
        description:
                R: |
                        Adjustment method for posthoc tests. One or more of `'none'`,  `'bonf'`,`'tukey'`  `'holm'`, `'scheffe'` and `'sidak'`; provide no,  Bonferroni, Tukey and Holm Scheffé and Sidak Post Hoc corrections, respectively. See \[emmeans]{summary.emmGrid} for details.
                ui: |
                        Adjustment method for posthoc tests. One or more of `'None'`,  `'Bonferroni'`,`'Tukey'`  `'Holm'` `'Scheffe'` and `'Sidak'` Post Hoc corrections. See \[emmeans](https://cran.r-project.org/web/packages/emmeans/emmeans.pdf) for details.
-       name: contrasts
        title: Factors Coding
        type: Array
        items: (factors)
        default: ~
        template:
                type: Group
                elements:
                -       name: var
                        type: Variable
                        content: $key
                -       name: type
                        type: List
                        options:
                        - simple
                        - deviation
                        - dummy
                        - difference
                        - helmert
                        - repeated
                        - polynomial
                        - custom
                        default: simple
        description:
                R: |
                        a named vector of the form `c(var1="type", var2="type2")` specifying the type of contrast to use, one of `'deviation'`, `'simple'`, `'dummy'`, `'difference'`, `'helmert'`, `'repeated'` or `'polynomial'`. If NULL, `simple` is used. Can also be passed as a list of list of the form list(list(var="var1",type="type1")).
-       name: show_contrastnames
        title: Names in estimates table
        type: Bool
        default: false
        description:
                R: |
                        `TRUE` or `FALSE` (default), shows raw names of the contrasts variables in tables
-       name: show_contrastcodes
        title: Contrast Coefficients tables
        type: Bool
        default: false
        description:
                R: |
                        `TRUE` or `FALSE` (default), shows contrast coefficients tables
-       name: contrast_custom_focus
        type: Bool
        title: Focus on custom contrast
        default: false
-       name: contrast_custom_values
        type: Array
        default: []
        items: (factors)
        template:
                type: Group
                elements:
                -       name: var
                        type: Variable
                        content: $key
                -       name: codes
                        type: String
-       name: simple_x
        title: Simple effects variable
        type: Variable
        default: ~
        description:
                R: |
                        The variable for which the simple effects (slopes) are computed
-       name: simple_mods
        title: Moderators
        type: Variables
        default: ~
        description:
                R: |
                        the variable that provides the levels at which the simple effects are computed
-       name: simple_interactions
        title: Simple Interactions
        type: Bool
        default: false
        description:
                R: |
                        should simple Interactions be computed
-       name: emmeans
        title: Estimated Marginal Means
        type: Terms
        default: ~
        description:
                R: a rhs formula with the terms specifying the marginal means to estimate
                        (of the form `'~x+x:z'`)
-       name: covs_conditioning
        title: Covariates conditioning
        type: List
        options:
        -       name: mean_sd
                title: Mean ±  SD
        -       name: percent
                title: Percentiles 50 ± offset
        -       name: range
                title: Min to Max
        default: mean_sd
        description:
                R: |
                        '`mean_sd`' (default), or '`percent`'. How to condition covariates in simple effects and plots. '`mean_sd`' for mean +/- '`ccp_value`' * sd. '`percent`' for median +/-'`ccp_value`' for percentiles.
-       name: ccra_steps
        type: Number
        default: 1
        min: 1
        max: 50
        description:
                R: "Covariate condition range steps (not very mnemonic): At how many
                        values between min and max should the covariate be conditioned
                        \n"
                ui: "Covariate condition range steps: At how many values between min
                        and max should the covariate be conditioned \n"
-       name: ccm_value
        type: Number
        default: 1
        description:
                R: |
                        how many st.deviations around the means used to condition simple effects and plots. Used if `simpleScale`=`'mean_sd'`
-       name: ccp_value
        type: Number
        default: 25
        min: 5
        max: 50
        description:
                R: "Offset (number of percentiles) around the median used to condition
                        simple effects and plots. Used if `covs_conditioning='percent'`.
                        \n"
                ui: "Offset (number of percentiles) around the median used to condition
                        simple effects and plots. Used if `covs_conditioning='percent'`.
                        \n"
-       name: covs_scale_labels
        type: List
        options:
        -       name: labels
                title: Labels
        -       name: values
                title: Values
        -       name: values_labels
                title: Values + Labels
        -       name: uvalues
                title: Unscaled Values
        -       name: uvalues_labels
                title: Unscaled Values + Labels
        default: labels
        description:
                R: |
                        how the levels of a continuous moderator should appear in tables and plots: `labels`, `values` and `values_labels`, `ovalues`, `ovalues_labels. The latter two refer to the variable orginal levels, before scaling.
-       name: predicted
        title: Predicted
        type: Output
        description:
                R: |
                        not used in R
                ui: |
                        Saves the predicted values of the model. Predicted values are always scaled in the dependent variable original scale, that in the majority of cases is the probability scale. For `Poisson` models and `Negative Binomial` the count scale is used.
-       name: residuals
        title: Residuals
        type: Output
        description:
                R: |
                        not used in R
                ui: |
                        Saves the residual values of the model. The response scale is used.
-       name: plot_x
        title: Horizontal axis
        type: Variable
        default: ~
        description:
                R: |
                        a string naming the variable placed on the horizontal axis of the plot
-       name: plot_z
        title: Separate lines
        type: Variable
        default: ~
        description:
                R: |
                        a string naming the variable represented as separate lines in the plot
-       name: plot_by
        title: Separate plots
        type: Variables
        default: ~
        description:
                R: |
                        a list of variables defining the levels at which a separate plot should be produced.
-       name: plot_raw
        title: Observed scores
        type: Bool
        default: false
        description:
                R: |
                        `TRUE` or `FALSE` (default), plot raw data along the predicted values
-       name: plot_yscale
        title: Y-axis observed range
        type: Bool
        default: false
        description:
                R: |
                        `TRUE` or `FALSE` (default), set the Y-axis range equal to the range of the observed values.
-       name: plot_xoriginal
        title: X original scale
        type: Bool
        default: false
        description:
                R: |
                        `TRUE` or `FALSE` (default), use original scale for covariates.
                ui: |
                        If selected, the X-axis variable is scaled with the orginal scale of the variable, independently to the scaling set is the `Covariates Scaling`.
-       name: plot_black
        title: Varying line types
        type: Bool
        default: false
        description:
                R: |
                        `TRUE` or `FALSE` (default), use different linetypes per levels.
                ui: |
                        If selected, a black and white theme is set for the plot, with multiple lines (if present) drawn in different styles.
-       name: plot_around
        title: Display
        type: List
        options:
        -       name: none
                title: None
        -       name: ci
                title: Confidence intervals
        -       name: se
                title: Standard Error
        default: ci
        description:
                R: |
                        `'none'` (default), `'ci'`, or `'se'`. Use no error bars, use confidence intervals, or use standard errors on the plots, respectively.
                ui: |
                        `'None'` (default), `Confidence Intervals`, or `Standard Error`. Display on plots no error bars, use confidence intervals, or use standard errors on the plots, respectively.
-       name: plot_jn
        title: Johnson-Neyman plot
        type: Bool
        default: false
        description:
                R: |
                        `'FALSE'` (default), `'TRUE'` produces the Johnson-Neyman plot for simple slope significance.
                ui: |
                        Produces the Johnson-Neyman plot for simple slopes significance.
-       name: plot_jn_expb
        title: exp(B) scale
        type: Bool
        default: false
        description:
                R: |
                        `'FALSE'` (default), `'TRUE'` plots the exp(B) (odd-ratio) in the Johnson-Neyman plot .
                ui: plots the  the exp(B) (odd-ratio) in the Johnson-Neyman plot.
-       name: covs_scale
        title: Covariates Scaling
        type: Array
        items: (covs)
        default: ~
        template:
                type: Group
                elements:
                -       name: var
                        type: Variable
                        content: $key
                -       name: type
                        type: List
                        options:
                        -       title: Centered
                                name: centered
                        -       title: z-scores
                                name: standardized
                        -       title: None
                                name: none
                        default: centered
        description:
                R: |
                        a named vector of the form \code{c(var1='type', var2='type2')} specifying the transformation to apply to covariates, one of `'centered'` to the mean, `'standardized'`,`'log'` or  `'none'`. `'none'` leaves the variable as it is.
-       name: scale_missing
        title: Scale on
        type: List
        options:
        -       title: Complete cases
                name: complete
        -       title: Columnwise
                name: colwise
        default: complete
-       name: offset
        title: Offset
        type: Variable
        default: ~
        description:
                R: a vector of strings naming the offset variables.
-       name: estimates_ci
        title: For estimates
        type: Bool
        default: false
        description:
                R: "`TRUE`  or `FALSE` (default), coefficients CI in tables                \n"
-       name: vcov
        title: Coefficients Covariances
        type: Bool
        default: false
        description:
                R: |
                        `TRUE` or `FALSE` (default), shows coefficients covariances
-       name: crosstab
        title: Classification Table
        type: Bool
        default: false
        description:
                R: |
                        `TRUE` or `FALSE` (default), produces a classification table (predicted vs observed)
                ui: |
                        Produces a classification table (predicted vs observed)
-       name: input_method
        title: Input Method
        type: List
        default: standard
        options:
        -       name: standard
                title: Responses
        -       name: success
                title: Success/Failure
        -       name: total
                title: P(success)/Totals
        description:
                R: |
                        notpresent
                ui: |
                        The method in which the data are organized. `Responses` is the standard method, in which the dependent variable is a dichotomous variable with two levels.
                        `Success/Failure` expect the data to be a table in which two columns are defined, one indicating success frequencies (level 1)
                          and the other level 0 frequencies (failure frequencies). `P(Success)/Totals` expect a columnt of proportions of success and the weights (Totals)
                          of each proportion.
-       name: ci_method
        title: CI Method
        type: List
        default: wald
        options:
        -       name: wald
                title: Standard
        -       name: profile
                title: Profile
        -       name: quantile
                title: Bootstrap Percent
        -       name: bcai
                title: Bootstrap BCa
        description:
                R: |
                        The method used to compute the confidence intervals. `wald` uses the Wald method to compute standard errors and confidence intervals. `profile` computes Profile Likelihood Based Confidence Interval, in which  the bounds are chosen based on the percentiles of the chi-square distribution around the maximum likelihood estimate. `quantile` performs a non-parametric boostrap, with `Bootstrap rep` repetitions, and compute the CI based on the percentiles of the boostrap distribution. `bcai` implements the bias-corrected bootstrap method.
                ui: |
                        The method used to compute the confidence intervals. `Standard` uses the Wald method to compute standard errors and confidence intervals. `Profile` computes Profile Likelihood Based Confidence Interval, in which  the bounds are chosen based on the percentiles of the chi-square distribution around the maximum likelihood estimate. `Bootstrap percent` performs a non-parametric boostrap, with `Bootstrap rep` repetitions, and compute the CI based on the percentiles of the boostrap distribution. The `BCa` implements the bias-corrected bootstrap method.
-       name: expb_ci
        title: For exp(B)
        type: Bool
        default: true
        description:
                R: |
                        `TRUE` (default) or `FALSE` , exp(B) CI in table
-       name: es
        title: Effect Size
        type: NMXList
        options:
        -       name: expb
                title: Odd Ratios (expB)
        -       name: RR
                title: Relative Risk (RR)
        -       name: marginals
                title: Marginal Effects
        default:
        - expb
        description:
                R: |
                        Effect size indices. `expb` (default) exponentiates the coefficients. For dichotomous dependent variables relative risk indices (RR) can be obtained. `marginals` computes the marginal effects.
                ui: |
                        Effect size indices. `Odd Rations` (default) exponentiates the coefficients. For dichotomous dependent variables `Relative Risk ` indices  can be obtained. `Marginal Effects` computes the marginal effects (if the model allows).
-       name: model_type
        title: Model Selection
        type: List
        options:
        -       name: linear
                title: Linear
        -       name: poisson
                title: Poisson
        -       name: poiover
                title: Poisson (overdispersion)
        -       name: nb
                title: Negative Binomial
        -       name: logistic
                title: Logistic
        -       name: probit
                title: Probit
        -       name: probit
                title: Probit
        -       name: beta
                title: Beta
        -       name: ordinal
                title: Ordinal (proportional odds)
        -       name: multinomial
                title: Multinomial
        -       name: custom
                title: Custom
        default: linear
        description:
                R: |
                        Select the generalized linear model: `linear`,`poisson`,`logistic`,`multinomial`
-       name: custom_family
        title: Distribution
        type: List
        options:
        -       title: Gaussian
                name: gaussian
        -       title: Binomial
                name: binomial
        -       title: Poisson
                name: poisson
        -       title: Inverse gaussian
                name: inverse.gaussian
        -       title: Gamma
                name: Gamma
        default: gaussian
        description:
                R: |
                        Distribution family for the custom model, accepts gaussian, binomial, gamma and inverse_gaussian .
-       name: custom_link
        title: Link Function
        type: List
        options:
        -       title: Identity
                name: identity
        -       title: Logit
                name: logit
        -       title: Log
                name: log
        -       title: Inverse
                name: inverse
        -       title: Inverse squared
                name: 1/mu^2
        -       title: Square root
                name: sqrt
        default: identity
        description:
                R: |
                        Distribution family for the custom model, accepts  identity, log and inverse, onemu2 (for 1/mu^2).
-       name: propodds_test
        title: Parallel lines test
        type: Bool
        default: false
        description:
                R: |
                        Test parallel lines assumptions in cumulative link model (ordinal regression)
-       name: preds_phi
        title: Predictors in precision model
        type: Bool
        default: false
        description:
                R: |
                        Include the predictors also for the precision phi (beta regression)
-       name: plot_scale
        title: Y-axis scale
        type: List
        options:
        -       name: response
                title: Response
        -       name: link
                title: Linear predictor
        -       name: mean.class
                title: Mean class
        default: response
        description:
                R: |
                        Plot ordinal model predicted values in as probabilities (`response`) or predicted class (`mean.class`)
